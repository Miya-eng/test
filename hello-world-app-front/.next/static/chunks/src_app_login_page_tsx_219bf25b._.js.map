{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/miyaeng/Documents/Apprentice/RealWorld/hello-world-app-front/src/app/login/page.tsx"],"sourcesContent":["'use client';\nimport React from 'react';\nimport api from '@/lib/axios';\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useAuth } from '@/contexts/AuthContext';\n\nexport default function LoginPage() {\n    const router = useRouter();\n    const { login } = useAuth();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        if (!email || !password) {\n            setErrorMessage('すべての項目を入力してください');\n            return;\n        }\n\n        try {\n            await api.get('/sanctum/csrf-cookie')\n            await api.post('/api/users/login', {\n                email: email,\n                password: password\n            });\n            // ✅ Laravelからログインユーザーの情報を取得\n            const res = await api.get('/api/user');\n\n            // ✅ ReactのAuthContextにログイン情報をセット！\n            login({\n                id: res.data.id,\n                username: res.data.name,\n                userImage: res.data.img\n            });\n            setSuccessMessage('ログイン成功！');\n            setEmail('');\n            setPassword('');\n            setErrorMessage('');\n            setTimeout(() => {\n                router.push('/');\n            }\n                , 1000);\n        } catch (error: any) {\n            if (error.response?.data?.message) {\n                setErrorMessage(error.response.data.message);\n            } else {\n                setErrorMessage('ログインに失敗しました');\n            }\n        }\n    }\n\n    return (\n        <div className=\"auth-page\">\n            <div className=\"container page\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 offset-md-3 col-xs-12\">\n                        <h1 className=\"text-xs-center\">Sign in</h1>\n                        <p className=\"text-xs-center\">\n                            <a href=\"/register\">Need an account?</a>\n                        </p>\n\n                        <ul className=\"error-messages\">\n                            {successMessage && <li>{successMessage}</li>}\n                            {errorMessage && <li>{errorMessage}</li>}\n                        </ul>\n\n                        <form onSubmit={handleSubmit}>\n                            <fieldset className=\"form-group\">\n                                <input\n                                    className=\"form-control form-control-lg\"\n                                    type=\"email\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    placeholder=\"Email\"\n                                />\n                            </fieldset>\n                            <fieldset className=\"form-group\">\n                                <input\n                                    className=\"form-control form-control-lg\"\n                                    type=\"password\"\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                    placeholder=\"Password\"\n                                />\n                            </fieldset>\n                            <button\n                                type='submit'\n                                className=\"btn btn-lg btn-primary pull-xs-right\">\n                                Sign in\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACpB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IACxB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAEhB,IAAI,CAAC,SAAS,CAAC,UAAU;YACrB,gBAAgB;YAChB;QACJ;QAEA,IAAI;YACA,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAC;YACd,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAC,oBAAoB;gBAC/B,OAAO;gBACP,UAAU;YACd;YACA,4BAA4B;YAC5B,MAAM,MAAM,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAC;YAE1B,kCAAkC;YAClC,MAAM;gBACF,IAAI,IAAI,IAAI,CAAC,EAAE;gBACf,UAAU,IAAI,IAAI,CAAC,IAAI;gBACvB,WAAW,IAAI,IAAI,CAAC,GAAG;YAC3B;YACA,kBAAkB;YAClB,SAAS;YACT,YAAY;YACZ,gBAAgB;YAChB,WAAW;gBACP,OAAO,IAAI,CAAC;YAChB,GACM;QACV,EAAE,OAAO,OAAY;YACjB,IAAI,MAAM,QAAQ,EAAE,MAAM,SAAS;gBAC/B,gBAAgB,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO;YAC/C,OAAO;gBACH,gBAAgB;YACpB;QACJ;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAG,WAAU;sCAAiB;;;;;;sCAC/B,6LAAC;4BAAE,WAAU;sCACT,cAAA,6LAAC;gCAAE,MAAK;0CAAY;;;;;;;;;;;sCAGxB,6LAAC;4BAAG,WAAU;;gCACT,gCAAkB,6LAAC;8CAAI;;;;;;gCACvB,8BAAgB,6LAAC;8CAAI;;;;;;;;;;;;sCAG1B,6LAAC;4BAAK,UAAU;;8CACZ,6LAAC;oCAAS,WAAU;8CAChB,cAAA,6LAAC;wCACG,WAAU;wCACV,MAAK;wCACL,OAAO;wCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wCACxC,aAAY;;;;;;;;;;;8CAGpB,6LAAC;oCAAS,WAAU;8CAChB,cAAA,6LAAC;wCACG,WAAU;wCACV,MAAK;wCACL,OAAO;wCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wCAC3C,aAAY;;;;;;;;;;;8CAGpB,6LAAC;oCACG,MAAK;oCACL,WAAU;8CAAuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASjF;GA7FwB;;QACL,qIAAA,CAAA,YAAS;QACN,kIAAA,CAAA,UAAO;;;KAFL","debugId":null}}]
}